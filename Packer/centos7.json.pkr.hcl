
variable "build_type" {
  type    = string
  default = ""
}

variable "checksumm" {
  type    = string
  default = "d68f92f41ab008f94bd89ec4e2403920538c19a7b35b731e770ce24d66be129a"
}

variable "insecure_connection" {
  type    = string
  default = "true"
}

variable "iso_local_url" {
  type    = string
  default = "C:\\Users\\madxl\\Downloads\\CentOS-7-x86_64-Minimal-2207-02.iso"
}

variable "iso_url" {
  type    = string
  default = "https://mirror.axelname.ru/centos/8-stream/isos/x86_64/CentOS-Stream-8-x86_64-latest-boot.iso"
}

variable "ks" {
  type    = string
  default = "CentOS-Stream-8-x86_64-latest-boot (1).iso"
}

variable "ssh_host" {
  type    = string
  default = ""
}

variable "ssh_pass" {
  type    = string
  default = "xxx"
}

variable "ssh_user" {
  type    = string
  default = "root"
}

variable "vm_name" {
  type    = string
  default = "CentOS 7"
}

variable "vmgateway" {
  type    = string
  default = "192.168.87.1"
}

variable "vmipaddress" {
  type    = string
  default = "192.168.87.128"
}

variable "vmnetmask" {
  type    = string
  default = "255.255.255.0"
}

locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

source "vmware-iso" "autogenerated_1" {
  boot_command           = ["<esc>", "linux inst.ks=cdrom:/dev/sr1:/centos7_kickstart.cfg <enter><wait>", " ip=${var.vmipaddress}::${var.vmgateway}:${var.vmnetmask}:template:eth0:none", " nameserver=${var.vm_name}", " biosdevname=0 net.ifnames=0", "<enter>", "<wait>"]
  boot_wait              = "10s"
  cd_files               = ["D:\\WorkSpace\\Learn\\HashiCorp\\Learn-ansible-git-docker-python\\packer\\centos7_kickstart.cfg"]
  cdrom_adapter_type     = ""
  communicator           = "ssh"
  cores                  = "2"
  cpus                   = "2"
  disk_size              = "25000"
  disk_type_id           = ""
  headless               = "false"
  insecure_connection    = "${var.insecure_connection}"
  iso_checksum           = "${var.checksumm}"
  iso_url                = "${var.iso_local_url} "
  memory                 = "2048"
  network                = "nat"
  output_directory       = "D:\\Virtual Machine\\Tamplates\\${var.vm_name}-${local.timestamp}"
  shutdown_command       = "shutdown -P now"
  shutdown_timeout       = "5h"
  ssh_handshake_attempts = "3"
  ssh_host               = "${var.ssh_host}"
  ssh_password           = "${var.ssh_pass}"
  ssh_port               = "22"
  ssh_timeout            = "1h"
  ssh_username           = "${var.ssh_user}"
  version                = "16"
  vm_name                = "${var.vm_name}-${local.timestamp}"
  vnc_bind_address       = "192.168.87.1"
  vnc_disable_password   = "true"
  vnc_port_max           = "5960"
  vnc_port_min           = "5901"
}

build {
  sources = ["source.vmware-iso.autogenerated_1"]

  provisioner "shell" {
    scripts = ["D:\\WorkSpace\\Learn\\HashiCorp\\Learn-ansible-git-docker-python\\packer\\etc\\scripts\\init.sh", "D:\\WorkSpace\\Learn\\HashiCorp\\Learn-ansible-git-docker-python\\packer\\etc\\scripts\\installPython.sh"]
  }

  provisioner "file" {
    destination = "/opt/rsa.pub"
    source      = "D:\\WorkSpace\\Learn\\HashiCorp\\Learn-ansible-git-docker-python\\packer\\etc\\Files\\rsa.pub"
  }

  provisioner "shell" {
    inline = ["echo foooooooo", "ifconfig", "hostname", "cat /opt/rsa.pub  >> ~/.ssh/authorized_keys"]
  }

}
